// Класс представления комплексных чисел
class ComplexNumber {
    private double real;
    private double imaginary;

    public ComplexNumber(double real, double imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }

    // Геттеры и сеттеры

    @Override
    public String toString() {
        return real + " + " + imaginary + "i";
    }
}

// Класс калькулятора комплексных чисел
class ComplexCalculator {
    public ComplexNumber add(ComplexNumber num1, ComplexNumber num2) {
        return new ComplexNumber(num1.getReal() + num2.getReal(), num1.getImaginary() + num2.getImaginary());
    }

    public ComplexNumber multiply(ComplexNumber num1, ComplexNumber num2) {
        double real = num1.getReal() * num2.getReal() - num1.getImaginary() * num2.getImaginary();
        double imaginary = num1.getReal() * num2.getImaginary() + num1.getImaginary() * num2.getReal();
        return new ComplexNumber(real, imaginary);
    }

    public ComplexNumber divide(ComplexNumber num1, ComplexNumber num2) {
        double denominator = num2.getReal() * num2.getReal() + num2.getImaginary() * num2.getImaginary();
        double real = (num1.getReal() * num2.getReal() + num1.getImaginary() * num2.getImaginary()) / denominator;
        double imaginary = (num1.getImaginary() * num2.getReal() - num1.getReal() * num2.getImaginary()) / denominator;
        return new ComplexNumber(real, imaginary);
    }
}

// Класс для логирования операций
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

class CalculatorLogger {
    private static final Logger logger = LoggerFactory.getLogger(CalculatorLogger.class);

    public void logOperation(String operation, ComplexNumber result) {
        logger.info("Operation: {}, Result: {}", operation, result);
    }
}

// Пример использования
public class Main {
    public static void main(String[] args) {
        ComplexCalculator calculator = new ComplexCalculator();
        CalculatorLogger logger = new CalculatorLogger();

        ComplexNumber num1 = new ComplexNumber(3, 4);
        ComplexNumber num2 = new ComplexNumber(5, 2);

        ComplexNumber resultAdd = calculator.add(num1, num2);
        logger.logOperation("Addition", resultAdd);

        ComplexNumber resultMultiply = calculator.multiply(num1, num2);
        logger.logOperation("Multiplication", resultMultiply);

        ComplexNumber resultDivide = calculator.divide(num1, num2);
        logger.logOperation("Division", resultDivide);
    }
}
